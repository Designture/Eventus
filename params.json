{"name":"Eventus","tagline":"Eventus is a professional implementation of EventEmitter for Dart","body":"# Eventus\r\n\r\nThis project introduces a class to be used as a mixin to allow a class to act as an event emitter\r\nto which others can subscribe.\r\nSeveral event-related projects existed, but none of them offered the flexibility and simplicity that we wanted,\r\nso we created Eventus.\r\n\r\nEventus is a professional implementation of EventEmitter for Dart. This is based on the Node.js\r\n[EventEmitter][node_event_emitter] enhanced with Dart super power!\r\n\r\n## Installation\r\n\r\nTo install package in your system, declare it as a dependency in `pubspec.yaml`:\r\n\r\n```yaml\r\ndependencies:\r\n    eventus: \">=1.0.0 <2.0.0\"\r\n```\r\n\r\nThen import `eventus` in your project\r\n\r\n```dart\r\nimport 'package:eventus/eventus.dart';\r\n```\r\n\r\n## Usage\r\n\r\nYou can use strings to identify the event, and provide additional data separately:\r\n\r\n```dart\r\n// to emit:\r\nemitter.emit('success', result_var);\r\n// to subscribe:\r\nemitter.on('success', (String r) => doStuff(r));\r\n```\r\n\r\nYou can send zero or even to three elements to handler, like that:\r\n\r\n```dart\r\nemitter.emit('event', arg1, arg2, arg3);\r\n// if you need more arguments use the power of lists\r\nemitter.emit('event', arg1, arg2, [arg3, arg4, arg5]);\r\n```\r\n\r\n### Unsubscribing an event\r\n\r\nThe `removeListener()` method allow you to remove a listener for a given event.\r\nThis removes normal listeners or even one-time event handlers.\r\n\r\n```dart\r\nemitter.removeListener('event_name', handlerReference);\r\n```\r\n\r\n### Remove all listeners for an event\r\n\r\nIf you want remove all the listeners who are listening a certain event, you use the\r\n`removeAllListeners` method.\r\n\r\n```dart\r\nemitter.removeAllListeners('event_name');\r\n```\r\n\r\n### Remove all listeners\r\n\r\nYou can also unsubscribe all events from an event emitter as follows:\r\n\r\n```dart\r\nemitter.clearListeners();\r\n```\r\n\r\n## Features and bugs\r\n\r\nPlease file feature requests and bugs at the [issue tracker][tracker].\r\n\r\n[tracker]: http://example.com/issues/replaceme\r\n[node_event_emitter]: https://nodejs.org/api/events.html#events_class_events_eventemitter\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}